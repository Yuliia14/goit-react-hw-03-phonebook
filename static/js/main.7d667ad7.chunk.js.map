{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactListItem.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactListItem","name","number","onRemove","className","s","item","text","type","onClick","ContactsList","contacts","onRemoveContact","list","map","id","ContactsForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formInputs","label","placeholder","input","onChange","button","span","Component","Filter","onChangeFilter","App","filter","addContact","contact","uuidv4","find","console","log","alert","prevState","removeContact","contactId","changeFilter","getVisibleContacts","length","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d667ad7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__PN3CO\",\"formInputs\":\"ContactForm_formInputs__3ng7j\",\"text\":\"ContactForm_text__3GKFI\",\"label\":\"ContactForm_label__16EVm ContactForm_text__3GKFI\",\"input\":\"ContactForm_input__YMCbw\",\"button\":\"ContactForm_button__v4K7I ContactForm_text__3GKFI\",\"span\":\"ContactForm_span__zW-SI ContactForm_text__3GKFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1H4xZ\",\"item\":\"ContactList_item__1-msK\",\"input\":\"ContactList_input__3TMaF\",\"text\":\"ContactList_text__176kB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3vVUZ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({name, number, onRemove}) => (\r\n    <li className= {s.item}>\r\n        <p className={s.text}>{name}: {number}</p>\r\n        <button type=\"button\" onClick={onRemove}>\r\n        Delete contact</button>\r\n    </li>\r\n)\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onRemove: PropTypes.func,\r\n  };\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactListItem from './ContactListItem'\r\n\r\n\r\nconst ContactsList = ({contacts, onRemoveContact}) => (\r\n    <ul className= {s.list}>\r\n        {contacts.map(({id, name, number}) => (\r\n            <ContactListItem key={id} name = {name} number = {number} onRemove={() => onRemoveContact(id)}/>\r\n        ))}\r\n    </ul>\r\n)\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onRemoveContact: PropTypes.func,\r\n  };\r\n\r\nexport default ContactsList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default class ContactsForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n      }\r\n\r\n    static propTypes = {\r\n        name: PropTypes.string,\r\n        number: PropTypes.number,\r\n    };\r\n\r\n    handleChange = e => {\r\n        const {name, value} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {name, number} = this.state;\r\n\r\n        this.props.onAddContact({name, number})\r\n\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n\r\n        return(\r\n            <form className= {s.form} onSubmit={this.handleSubmit}>\r\n                <div className= {s.formInputs}>\r\n                    <label className= {s.label}>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter name\"\r\n                        className= {s.input}\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    </label>\r\n                    <label className= {s.label}>\r\n                    Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        placeholder=\"Enter number\"\r\n                        className= {s.input}\r\n                        name='number'\r\n                        value={number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    </label>\r\n                </div>\r\n                <button type=\"submit\" className= {s.button}><span className={s.span}>Add contact {name}</span></button>\r\n            </form>\r\n        )        \r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({value, onChangeFilter}) {\r\n    return (\r\n    <div>\r\n        <input\r\n            type=\"text\"\r\n            className= {s.input}\r\n            name=\"filter\"  \r\n            value={value}\r\n            onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n    </div>\r\n    )}\r\n\r\n    Filter.propTypes = {\r\n        value: PropTypes.string,\r\n        onChangeFilter: PropTypes.func,\r\n    };","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './App.css';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport ContactsForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\n\nexport default class App extends Component {\n  state = {\n    contacts: [ ],\n    filter: '',\n  }\n  addContact = ({name, number}) => {\n    const contact = {\n        id: uuidv4(),\n        name,\n        number\n    }\n        if (this.state.contacts.find((contact) => contact.name === name)) { \n          console.log(this.state.contacts);\n          alert(`${name} is already in contacts`);\n        } else {\n          this.setState(prevState => {\n            return {\n              contacts: [...prevState.contacts, contact]\n            }\n          })\n        }  \n  }\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId)\n      }\n    })\n  }\n  changeFilter = filter => {\n    this.setState({ filter })\n  }\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    if(contacts.length <= 0) {\n      console.log('Нет имен')\n     } else {\n      console.log(contacts.length)\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()))\n      }\n    }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n\n    this.setState({contacts: parsedContacts})\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n      <h1>Phonebook</h1>\n      <ContactsForm onAddContact={this.addContact}/>\n      <h2>Contacts</h2>\n      <p className={s.text}>Find contacts by name</p>\n      <Filter filter={filter} onChangeFilter ={this.changeFilter}/>\n      {contacts.length > 0 && (\n        <ContactsList contacts={visibleContacts} onRemoveContact={this.removeContact}/>\n      )}\n    </div>\n    ) \n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}